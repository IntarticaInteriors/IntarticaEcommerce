// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id        String     @id @default(uuid())
  name           String
  email          String     @unique
  address        String?
  phone          String?
  isBusiness     Boolean
  projects       Projects[]
  orders         Orders[]
  profilePicture String?
  reviews        Reviews[]
}

model Projects {
  project_id   String  @id @default(uuid())
  User         User?   @relation(fields: [proj_user_id], references: [user_id])
  proj_user_id String?
  title        String
  description  String?
  location     String?
  client_name  String?
  cart         Cart?   @relation(fields: [cart_id], references: [cart_id])
  cart_id      String? @unique
}

model Cart {
  cart_id                 String    @id @default(uuid())
  Projects                Projects?
  items_in_cart           Json[]
  totalPrice              Decimal   @default(0)
  totalPriceAfterDiscount Decimal   @default(0)
  project_id              String?   @unique
}

model Categories {
  category_id String     @id @default(uuid())
  name        String?    @unique
  description Json?
  Products    Products[]
}

model Orders {
  order_id         String   @id @default(uuid())
  user             User?    @relation(fields: [order_user_id], references: [user_id])
  order_user_id    String?
  cart_items       Json
  payment_method   String
  shipping_address String
  phone            String
  city             String
  postalCode       String
  totalOrderPrice  String
  isPaid           Boolean
  isDelivered      Boolean
  paidAt           DateTime
  deliveredAt      DateTime
}

model Products {
  prod_id        String     @id @default(uuid())
  Category       Categories @relation(fields: [category_id], references: [category_id])
  brand          String
  name           String
  description    Json
  size           Int?
  price          Float
  discount       Int?
  picture        String
  stockAvailable Int
  color          String?
  categoryname   String?
  category_id    String
  images         String[]
  Reviews        Reviews[]
}

model Reviews {
  review_id       String    @id @default(uuid())
  reviewText      String
  rating          Int
  User            User?     @relation(fields: [userUser_id], references: [user_id])
  userUser_id     String?
  product         Products? @relation(fields: [productsProd_id], references: [prod_id])
  productsProd_id String?
}

model Coupons {
  coupon_id   String    @id @default(uuid())
  name        String
  cartCart_id String?
  expire      DateTime?
  discount    Decimal?
}
